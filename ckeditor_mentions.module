<?php

/**
 * @file
 * Custom code implementations for Ckeditor mentions.
 */

use Drupal\ckeditor_mentions\CKEditorMentionEvent;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_editor_js_settings_alter().
 */
function ckeditor_mentions_editor_js_settings_alter(&$settings) {

  // Enables passing of data-mention attribute during entity save so that other
  // modules can pick up on the value and react to it before it is stripped out.
  if (isset($settings['editor']['formats'])) {
    foreach ($settings['editor']['formats'] as $format => $data) {
      if (isset($data['editorSettings']['extraPlugins']) && $data['editorSettings']['extraPlugins']) {
        $plugins = explode(',', $data['editorSettings']['extraPlugins']);
        if (in_array('mentions', $plugins)) {
          $attributes = [];
          if (isset($data['editorSettings']['allowedContent']['a']['attributes'])) {
            $attributes = explode(',', $data['editorSettings']['allowedContent']['a']['attributes']);
            $attributes[] = 'data-mention';
          }
          else {
            $attributes[] = 'data-mention';
          }
          if (is_array($settings['editor']['formats'][$format]['editorSettings']['allowedContent'])) {
            $settings['editor']['formats'][$format]['editorSettings']['allowedContent']['a']['attributes'] = implode(',', $attributes);
          }
        }
      }
    }
  }
}

/**
 * Implements hook_entity_update().
 */
function ckeditor_mentions_entity_update(EntityInterface $entity) {
  $mentions = \Drupal::getContainer()->get('ckeditor_mentions.mention_event_dispatcher');
  $mentions->dispatchMentionEvent($entity, CKEditorMentionEvent::MENTION_SUBSEQUENT);
}

/**
 * Implements hook_entity_insert().
 */
function ckeditor_mentions_entity_insert(EntityInterface $entity) {
  $mentions = \Drupal::getContainer()->get('ckeditor_mentions.mention_event_dispatcher');
  $mentions->dispatchMentionEvent($entity, CKEditorMentionEvent::MENTION_FIRST);
}
